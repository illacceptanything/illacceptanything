.globl main
.text
.align 16
.type main,@function
main:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
pushl $0
call exit
addl $4,%esp
movl $0,%eax
.LC1:
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf2:
.size main,.Lf2-main
.globl nested
.align 16
.type nested,@function
nested:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
cmpl $4,20(%ebp)
jge .LC7
cmpl $114,24(%ebp)
je .LC10
.LC7:
cmpl $1,20(%ebp)
jne .LC9
movl 24(%ebp),%edi
cmpl $104,%edi
je .LC10
cmpl $105,%edi
je .LC10
.LC9:
cmpl $2,20(%ebp)
jne .LC4
movl 24(%ebp),%edi
cmpl $111,%edi
je .LC10
cmpl $121,%edi
jne .LC4
.LC10:
movl 24(%ebp),%edi
movl %edi,20(%ebp)
.LC4:
movl $0,%eax
.LC3:
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf11:
.size nested,.Lf11-nested
.globl s
.align 16
.type s,@function
s:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
.LC12:
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf13:
.size s,.Lf13-s
.data
.globl Dy
.align 4
.type Dy,@object
.size Dy,8
Dy:
.long 0
.space 4
.globl Dz
.align 4
.type Dz,@object
.size Dz,8
Dz:
.long 1
.space 4
.globl Dfunc
.text
.align 16
.type Dfunc,@function
Dfunc:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf16:
.size Dfunc,.Lf16-Dfunc
.globl f
.align 16
.type f,@function
f:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf18:
.size f,.Lf18-f
.globl f1
.align 16
.type f1,@function
f1:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf20:
.size f1,.Lf20-f1
.globl f2
.align 16
.type f2,@function
f2:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf22:
.size f2,.Lf22-f2
.globl g
.align 16
.type g,@function
g:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf24:
.size g,.Lf24-g
.globl h
.align 16
.type h,@function
h:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf26:
.size h,.Lf26-h
.globl h1
.align 16
.type h1,@function
h1:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf28:
.size h1,.Lf28-h1
.globl h2
.align 16
.type h2,@function
h2:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf30:
.size h2,.Lf30-h2
.data
.align 4
.type yy.32,@object
.size yy.32,4
yy.32:
.long 1
.globl set1
.text
.align 16
.type set1,@function
set1:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf33:
.size set1,.Lf33-set1
.data
.align 4
.type yy.35,@object
.size yy.35,4
yy.35:
.long 2
.globl set2
.text
.align 16
.type set2,@function
set2:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf36:
.size set2,.Lf36-set2
.align 16
.type goo,@function
goo:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf38:
.size goo,.Lf38-goo
.globl sss
.align 16
.type sss,@function
sss:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf40:
.size sss,.Lf40-sss
.bss
.align 4
.type xr.42,@object
.size xr.42,4
.lcomm xr.42,4
.globl rrr
.text
.align 16
.type rrr,@function
rrr:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf43:
.size rrr,.Lf43-rrr
.globl setstatic
.align 16
.type setstatic,@function
setstatic:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf45:
.size setstatic,.Lf45-setstatic
.globl gx1
.align 16
.type gx1,@function
gx1:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf47:
.size gx1,.Lf47-gx1
.globl ff1
.align 16
.type ff1,@function
ff1:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf49:
.size ff1,.Lf49-ff1
.globl gg1
.align 16
.type gg1,@function
gg1:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf51:
.size gg1,.Lf51-gg1
.globl hh1
.align 16
.type hh1,@function
hh1:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf53:
.size hh1,.Lf53-hh1
.globl cmp
.align 16
.type cmp,@function
cmp:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf55:
.size cmp,.Lf55-cmp
.globl sort
.align 16
.type sort,@function
sort:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf57:
.size sort,.Lf57-sort
.globl onearg
.align 16
.type onearg,@function
onearg:
pushl %ebp
pushl %ebx
pushl %esi
pushl %edi
movl %esp,%ebp
movl %ebp,%esp
popl %edi
popl %esi
popl %ebx
popl %ebp
ret
.Lf65:
.size onearg,.Lf65-onearg
.bss
.globl ss4
.align 4
.type ss4,@object
.size ss4,4
.comm ss4,4
.align 4
.type ss2,@object
.size ss2,4
.lcomm ss2,4
.align 4
.type ss5,@object
.size ss5,4
.lcomm ss5,4
.globl ss3
.align 4
.type ss3,@object
.size ss3,4
.comm ss3,4
.align 4
.type ss1,@object
.size ss1,4
.lcomm ss1,4
.align 4
.type yy,@object
.size yy,4
.lcomm yy,4
.globl z
.align 4
.type z,@object
.size z,4
.comm z,4
.globl y
.align 4
.type y,@object
.size y,4
.comm y,4
.globl x
.align 4
.type x,@object
.size x,4
.comm x,4
.globl b
.align 4
.type b,@object
.size b,4
.comm b,4
.globl a
.align 4
.type a,@object
.size a,4
.comm a,4
.text
.ident "LCC: 4.1"
