{
  "name": "canonical-path",
  "version": "0.0.2",
  "description": "paths that always use forward slashes",
  "main": "index.js",
  "scripts": {
    "test": "jasmine-node index.spec.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/petebacondarwin/node-canonical-path"
  },
  "keywords": [
    "path",
    "forward",
    "slashes",
    "OS"
  ],
  "author": {
    "name": "Pete Bacon Darwin"
  },
  "license": "MIT",
  "devDependencies": {
    "jasmine-node": "~1.12.0"
  },
  "readme": "# Canonical Path Utility\r\n\r\nWhen writing node.js code that must support Windows and *nix OSes, it is sometimes frustrating\r\nthat path segments are separated differently depending upon the environment.\r\n\r\nIronically, we can pass in paths with either separator and the library will normalize it to the\r\ncurrent OS's format. But it then returns paths using the current OS's separator.\r\n\r\nThis utility simple wraps the built-in `path` library such that it only ever returns path segments\r\nseparated by forward slashes (/).\r\n\r\n## Installation\r\n\r\n```\r\nnpm install --save canonical-path\r\n```\r\n\r\n## Usage\r\n\r\n```\r\nvar path = require('canonical-path');\r\n\r\nvar p = path.normalize('a/b/../c');\r\n// p === 'a/c';\r\n```\r\n\r\n## Testing\r\n\r\n```\r\nnpm test\r\n``` ",
  "readmeFilename": "README.md",
  "_id": "canonical-path@0.0.2",
  "dist": {
    "shasum": "e31eb937a8c93ee2a01df1839794721902874574",
    "tarball": "http://registry.npmjs.org/canonical-path/-/canonical-path-0.0.2.tgz"
  },
  "_from": "canonical-path@0.0.2",
  "_npmVersion": "1.2.14",
  "_npmUser": {
    "name": "petebd",
    "email": "pete@bacondarwin.com"
  },
  "maintainers": [
    {
      "name": "petebd",
      "email": "pete@bacondarwin.com"
    }
  ],
  "directories": {},
  "_shasum": "e31eb937a8c93ee2a01df1839794721902874574",
  "_resolved": "https://registry.npmjs.org/canonical-path/-/canonical-path-0.0.2.tgz"
}
